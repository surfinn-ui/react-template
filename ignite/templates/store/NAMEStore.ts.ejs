---
destinationDir: src/models/<%= props.camelCaseName %>
patches:
  - path: "src/models/RootStore.ts"
    after: "from 'mobx-state-tree';\n"
    insert: "import { <%= props.pascalCaseName %>Store } from './<%= props.camelCaseName %>/<%= props.pascalCaseName %>Store';\n"
  - path: "src/models/RootStore.ts"
    after: "types.model('RootStore').props({\n"
    insert: "  <%= props.camelCaseName %>Store: types.optional(<%= props.pascalCaseName %>Store, {}),\n"
  - path: "src/models/index.ts"
    before: "// ðŸ‘† export other stores here\n"
    insert: "export * from './<%= props.camelCaseName %>/<%= props.pascalCaseName %>Store';\n" 
    skip: <%= props.skipIndexFile %>
---
import { flow, Instance, SnapshotIn, SnapshotOut, types } from 'mobx-state-tree';
import { withSetPropAction } from '../withSetPropAction';
import { TSearchResult, TFindResult, TCreateResult, TUpdateResult, TPartialUpdateResult, TDeleteResult } from '../../services/api';
import { <%= props.camelCaseName %>Api } from '../../services/api/<%= props.camelCaseName %>/<%= props.pascalCaseName %>Api';
import { FetchStates, withFetchStates } from '../withFetchStates';
import { withPagination } from '../withPagination';
// ^ generated dependencies by openapi-generator
// $ generated dependencies by openapi-generator

const <%= props.pascalCaseName %>StoreProps = {
  // ^ generated props by openapi-generator
  // $ generated props by openapi-generator
};

/**
 * Store description here for TypeScript hints.
 */
export const <%= props.pascalCaseName %>Store = types
  .model("<%= props.pascalCaseName %>Store", <%= props.pascalCaseName %>StoreProps)
  // Formatted Data 
  .views((self) => ({}))
  .extend(withFetchStates) // Fetch State
  .extend(withPagination) // Pagination Information
  .actions(withSetPropAction) // Set Property Action
  // Update Store State 
  .actions((self) => ({
    // ^ generated update state actions by openapi-generator
    // $ generated update state actions by openapi-generator
  }))
  // OPEN API GENERATOR ACTIONS
  .actions((self) => {
    // ^ generated actions by openapi-generator
    // $ generated actions by openapi-generator
    return ({
      // ^ generated actions by openapi-generator
      // $ generated actions by openapi-generator
      })
  })
  // CUSTOM ACTIONS
  .actions((self) => ({
  }));

export interface I<%= props.pascalCaseName %>Store extends Instance<typeof <%= props.pascalCaseName %>Store> {}
export interface I<%= props.pascalCaseName %>SnapshotOut extends SnapshotOut<typeof <%= props.pascalCaseName %>Store> {}
export interface I<%= props.pascalCaseName %>StoreSnapshotIn extends SnapshotIn<typeof <%= props.pascalCaseName %>Store> {}
export type T<%= props.pascalCaseName %>StorePropKeys = keyof I<%= props.pascalCaseName %>StoreSnapshotIn & string;
